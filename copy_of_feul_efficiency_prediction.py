# -*- coding: utf-8 -*-
"""Copy of Feul efficiency prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/158qLaQ25FvyNzNBpm7IIg-QBcVvyLDE7
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

from google.colab import files
files = files.upload()

import io

df = pd.read_csv(io.BytesIO(files['auto-mpg.csv']))

df.head()

df['horsepower'].isnull().sum()

df[df['horsepower']=='?']

df["horsepower"] = df["horsepower"].replace("?", np.NaN).astype("float64")

df['horsepower'].isnull().sum()

df.dropna(inplace=True)

df.isnull().sum()

df['car name'].value_counts()

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()
df['car name'] = encoder.fit_transform(df['car name'])

df.head()

"""**Exploratory Data Analysis**"""

plt.figure(figsize=(12,6))
sns.distplot(df['displacement'])
plt.show()

fig, ax = plt.subplots(figsize=(8, 6))

fig = sns.boxplot(x='origin', y="mpg", data=df)
plt.axhline(df.mpg.mean(),color='r',linestyle='dotted',linewidth=3)

plt.show()

"""**Model

```
# This is formatted as code
```

**
"""

X = df.drop('mpg', axis=1)
y = df['mpg']
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X_train.shape

X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X_train, y_train)

lr_pred = lr.predict(X_test)
lr_pred

from sklearn.metrics import accuracy_score, mean_squared_error

score_lr = np.sqrt(mean_squared_error(y_test, lr_pred))
score_lr

